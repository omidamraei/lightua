{"version":3,"sources":["../src/helpers.ts","../src/detectors.ts","../src/useragent.ts"],"names":["toInt","s","n","normVer","has","ua","token","winVersionName","nt","rx","detectBrowser","osName","m","withEngine","detectEngine","ver","v","detectOS","detectDevice","brandModel","detectBot","base","model","brand","raw","name","version","eng","major","UserAgent","_UserAgent","source"],"mappings":"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","file":"index.js","sourcesContent":["export const toInt = (s: string): number => {\n  const n = s.length ? Number.parseInt(s, 10) : NaN;\n  return Number.isNaN(n) ? 0 : n;\n};\n\nexport const normVer = (s: string | undefined): string =>\n  s ? s.replace(/_/g, \".\") : \"\";\n\nexport const has = (ua: string, token: string): boolean =>\n  ua.indexOf(token) !== -1;\n\nexport const winVersionName = (nt: string): string => {\n  switch (nt) {\n    case \"10.0\":\n      return \"10\";\n    case \"6.3\":\n      return \"8.1\";\n    case \"6.2\":\n      return \"8\";\n    case \"6.1\":\n      return \"7\";\n    case \"6.0\":\n      return \"Vista\";\n    case \"5.1\":\n      return \"XP\";\n    default:\n      return nt;\n  }\n};\n","import { has, normVer, toInt, winVersionName } from \"./helpers\";\nimport {\n  BrowserInfo,\n  BrowserName,\n  DeviceInfo,\n  EngineName,\n  OSInfo,\n  OSName,\n} from \"./types\";\n\n// ---------- regex ----------\nconst rx = {\n  chrome: /\\bChrome\\/(\\d[\\d.]+)/,\n  edgeChromium: /\\bEdg\\/(\\d[\\d.]+)/,\n  firefox: /\\bFirefox\\/(\\d[\\d.]+)/,\n  safari: /\\bVersion\\/(\\d[\\d.]+)\\s+Safari\\//,\n  iosSafari: /\\bCPU.*OS\\s(\\d[_\\d]*)\\s.*AppleWebKit\\/.*Safari\\//,\n  opera: /\\bOPR\\/(\\d[\\d.]+)/,\n  samsung: /\\bSamsungBrowser\\/(\\d[\\d.]+)/,\n  androidBrowser:\n    /\\bVersion\\/(\\d[\\d.]+)\\s+Chrome\\/\\d.*\\bwv\\b|\\bVersion\\/(\\d[\\d.]+)\\s+Mobile Safari\\/\\d/,\n  iosWebView: /\\bAppleWebKit\\/(\\d[\\d.]+)\\b(?!.*Safari\\/)/,\n  chromium: /\\bChromium\\/(\\d[\\d.]+)/,\n\n  appleWebKit: /\\bAppleWebKit\\/(\\d[\\d.]+)/,\n  gecko: /\\bGecko\\/\\d{8,}\\b.*\\bFirefox\\/(\\d[\\d.]+)/,\n  blinkHint: /\\bChrome\\/|Chromium\\/|Edg\\/|OPR\\/|SamsungBrowser\\//,\n\n  windows: /\\bWindows NT (\\d[\\d.]*)/,\n  macos: /\\bMac OS X (\\d[_\\d]*)/,\n  ios: /\\b(?:iPhone|iPad|iPod).*OS (\\d[_\\d]*)/,\n  android: /\\bAndroid (\\d[\\d.]*)/,\n  chromeOS: /\\bCrOS [a-zA-Z0-9_]+ (\\d[\\d.]*)/,\n\n  ipad: /\\biPad\\b/,\n  iphone: /\\biPhone\\b/,\n  androidTablet: /\\bAndroid\\b(?!.*Mobile)/,\n  androidMobile: /\\bAndroid.*\\bMobile\\b/,\n  samsungBrand: /\\bSM-([A-Z0-9-]+)/,\n  huaweiBrand: /\\b(HUAWEI|HONOR)[ -]?([A-Z0-9-]+)/,\n  xiaomiBrand: /\\b(MI |Redmi |POCO )([A-Z0-9-]+)/,\n\n  botHint: /\\b(bot|spider|crawler|fetch|slurp|scrape|httpclient|monitoring)\\b/i,\n  botVendors:\n    /\\b(googlebot|bingbot|duckduckbot|baiduspider|yandexbot|applebot|facebookexternalhit|twitterbot|linkedinbot|discordbot|slackbot|ahrefsbot|semrushbot|mj12bot|datadog|newrelic|uptime|gtmetrix)\\b/i,\n} as const;\n\n// ---------- core detectors ----------\nexport function detectBrowser(ua: string, osName: OSName): BrowserInfo {\n  let m: RegExpExecArray | null;\n\n  if ((m = rx.edgeChromium.exec(ua)))\n    return withEngine(\"Edge\", m?.[1] ?? \"\", detectEngine(ua));\n  if ((m = rx.opera.exec(ua)))\n    return withEngine(\"Opera\", m?.[1] ?? \"\", detectEngine(ua));\n  if ((m = rx.samsung.exec(ua)))\n    return withEngine(\"Samsung Internet\", m?.[1] ?? \"\", detectEngine(ua));\n  if ((m = rx.firefox.exec(ua)))\n    return withEngine(\"Firefox\", m?.[1] ?? \"\", detectEngine(ua));\n\n  if (osName === \"iOS\") {\n    if (rx.iosWebView.test(ua) && !has(ua, \"Safari/\")) {\n      const ev = rx.appleWebKit.exec(ua);\n      const ver = ev?.[1] ?? \"\";\n      return withEngine(\"iOS WebView\", ver, {\n        engine: \"WebKit\",\n        engineVersion: ver,\n      });\n    }\n    const s = rx.safari.exec(ua) || rx.iosSafari.exec(ua);\n    if (s)\n      return withEngine(\"Safari\", s[1] ? normVer(s[1]) : \"\", detectEngine(ua));\n  }\n\n  if ((m = rx.chrome.exec(ua))) {\n    if (osName === \"Android\" && /; wv\\)/.test(ua)) {\n      const v = rx.androidBrowser.exec(ua);\n      return withEngine(\n        \"Android Browser\",\n        v?.[1] ?? v?.[2] ?? \"\",\n        detectEngine(ua)\n      );\n    }\n    return withEngine(\"Chrome\", m?.[1] ?? \"\", detectEngine(ua));\n  }\n\n  if ((m = rx.chromium.exec(ua)))\n    return withEngine(\"Chromium\", m?.[1] ?? \"\", detectEngine(ua));\n  if ((m = rx.safari.exec(ua)))\n    return withEngine(\"Safari\", m?.[1] ?? \"\", detectEngine(ua));\n\n  return withEngine(\"Unknown\", \"\", detectEngine(ua));\n}\n\nexport function detectEngine(ua: string): {\n  engine: EngineName;\n  engineVersion: string;\n} {\n  let m: RegExpExecArray | null;\n  if ((m = rx.gecko.exec(ua)))\n    return { engine: \"Gecko\", engineVersion: m?.[1] ?? \"\" };\n\n  if ((m = rx.appleWebKit.exec(ua))) {\n    const ver = m?.[1] ?? \"\";\n    if (rx.blinkHint.test(ua)) return { engine: \"Blink\", engineVersion: ver };\n    return { engine: \"WebKit\", engineVersion: ver };\n  }\n\n  if (has(ua, \"Edge/\") || has(ua, \"Trident/\") || has(ua, \"MSIE \"))\n    return { engine: \"EdgeHTML\", engineVersion: \"\" };\n\n  return { engine: \"Unknown\", engineVersion: \"\" };\n}\n\nexport function detectOS(ua: string): OSInfo {\n  let m: RegExpExecArray | null;\n  if ((m = rx.windows.exec(ua)))\n    return { name: \"Windows\", version: winVersionName(normVer(m[1])) };\n  if ((m = rx.ios.exec(ua))) return { name: \"iOS\", version: normVer(m[1]) };\n  if ((m = rx.macos.exec(ua))) return { name: \"macOS\", version: normVer(m[1]) };\n  if ((m = rx.android.exec(ua)))\n    return { name: \"Android\", version: normVer(m[1]) };\n  if ((m = rx.chromeOS.exec(ua)))\n    return { name: \"ChromeOS\", version: normVer(m[1]) };\n  if (has(ua, \"Linux\")) return { name: \"Linux\", version: \"\" };\n  return { name: \"Unknown\", version: \"\" };\n}\n\nexport function detectDevice(ua: string, osName: OSName): DeviceInfo {\n  if (\n    rx.botHint.test(ua) ||\n    rx.botVendors.test(ua) ||\n    has(ua, \"HeadlessChrome\")\n  )\n    return { type: \"bot\" };\n  if (rx.ipad.test(ua))\n    return { type: \"tablet\", brand: \"Apple\", model: \"iPad\" };\n  if (rx.iphone.test(ua))\n    return { type: \"mobile\", brand: \"Apple\", model: \"iPhone\" };\n  if (osName === \"Android\") {\n    if (rx.androidTablet.test(ua)) return brandModel({ type: \"tablet\" }, ua);\n    if (rx.androidMobile.test(ua)) return brandModel({ type: \"mobile\" }, ua);\n    return brandModel({ type: \"mobile\" }, ua);\n  }\n  if (osName === \"ChromeOS\")\n    return { type: \"desktop\", brand: \"Google\", model: \"Chromebook\" };\n  return { type: \"desktop\" };\n}\n\nexport function detectBot(ua: string): boolean {\n  return (\n    rx.botHint.test(ua) ||\n    rx.botVendors.test(ua) ||\n    has(ua, \"HeadlessChrome\") ||\n    has(ua, \"Google-HTTP-Java-Client\")\n  );\n}\n\nexport function brandModel(base: DeviceInfo, ua: string): DeviceInfo {\n  let m: RegExpExecArray | null;\n\n  if ((m = rx.samsungBrand.exec(ua))) {\n    const model = m?.[1];\n    return model\n      ? { ...base, brand: \"Samsung\", model }\n      : { ...base, brand: \"Samsung\" };\n  }\n\n  if ((m = rx.huaweiBrand.exec(ua))) {\n    const brand = m?.[1] === \"HUAWEI\" ? \"Huawei\" : \"Honor\";\n    const model = m?.[2];\n    return model ? { ...base, brand, model } : { ...base, brand };\n  }\n\n  if ((m = rx.xiaomiBrand.exec(ua))) {\n    const raw = m?.[1];\n    const brand = raw ? raw.trim().replace(/\\s+/, \"\") : undefined;\n    const model = m?.[2];\n    if (brand && model) return { ...base, brand, model };\n    if (brand) return { ...base, brand };\n    return base;\n  }\n\n  return base;\n}\n\nexport function withEngine(\n  name: BrowserName,\n  version: string,\n  eng: { engine: EngineName; engineVersion: string }\n): BrowserInfo {\n  const v = normVer(version);\n  const major = v ? toInt(v.split(\".\")[0]!) : 0;\n  return {\n    name,\n    version: v,\n    major,\n    engine: eng.engine,\n    engineVersion: eng.engineVersion,\n  };\n}\n","import { detectBot, detectBrowser, detectDevice, detectOS } from \"./detectors\";\nimport { BrowserInfo, DeviceInfo, OSInfo } from \"./types\";\n\nexport default class UserAgent {\n  private _os?: OSInfo;\n  private _device?: DeviceInfo;\n  private _browser?: BrowserInfo;\n  private _isBot?: boolean;\n\n  private constructor(public source: string) {}\n\n  get os(): OSInfo {\n    if (!this._os) this._os = detectOS(this.source);\n    return this._os;\n  }\n\n  get isBot(): boolean {\n    if (this._isBot === undefined) this._isBot = detectBot(this.source);\n    return this._isBot;\n  }\n\n  get device(): DeviceInfo {\n    if (this._device) return this._device;\n    if (this.isBot) return (this._device = { type: \"bot\" });\n    return (this._device = detectDevice(this.source, this.os.name));\n  }\n\n  get browser(): BrowserInfo {\n    if (!this._browser)\n      this._browser = detectBrowser(this.source, this.os.name);\n    return this._browser;\n  }\n\n  get isMobile() {\n    return this.device.type === \"mobile\";\n  }\n  get isTablet() {\n    return this.device.type === \"tablet\";\n  }\n  get isDesktop() {\n    return this.device.type === \"desktop\";\n  }\n\n  static parse(ua: string = \"\"): UserAgent {\n    return new UserAgent(ua);\n  }\n}\n"]}